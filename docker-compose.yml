version: '3.8'

services:
  db:
    image: postgres:11-alpine
    volumes:
      - pgdata:/var/lib/postgresql
      - ./postgres-data:/tmp/
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 20s
      timeout: 60s
      retries: 5
      start_period: 3s
  mongo:
    image: mongo:jammy
    ports:
      - "27017:27017"

  tmdb_import:
    image: seppaleinen/worldinmovies_tmdb_import
    build: backend/tmdb_import/
    ports:
      - "8020:8020"
    depends_on:
      - mongo

  backend:
    image: seppaleinen/worldinmovies_backend
    build: backend/base/
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: on-failure
    environment:
      - TMDB_API=${TMDB_API}
      - SENTRY_URL=${SENTRY_URL}
    volumes:
      - gunicornsocket:/run/
    healthcheck:
      test: curl -sSLf http://localhost/health -LsS -f >/dev/null || exit 1
      interval: 60s
      timeout: 30s
      retries: 2
      start_period: 5s

  webapp:
    image: seppaleinen/worldinmovies_webapp
    build: frontend/app/
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - gunicornsocket:/run/
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:81}
      - REACT_APP_SENTRY_URL=${SENTRY_URL_FRONTEND}
    healthcheck:
      test: ['CMD', 'nc', '-vz', '-w1', 'localhost', '443']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
  #certbot:
  #  image: certbot/certbot
  #  entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pgdata:
  gunicornsocket:
  certs:
