version: '3.8'

services:
  db:
    image: postgres:11-alpine
    volumes:
      - pgdata:/var/lib/postgresql
      - ./postgres-data:/tmp/
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 2s

  backend:
    image: seppaleinen/worldinmovies_backend
    build: backend/
    expose:
      - 8000
    depends_on:
      - db
    restart: on-failure
    environment:
      - TMDB_API=${TMDB_API}
      - SENTRY_URL=${SENTRY_URL}
    volumes:
      - gunicornsocket:/run/
    healthcheck:
      test: wget -q 'http://localhost:8000/health' -O /dev/null || exit 1
      interval: 60s
      timeout: 30s
      retries: 2

  webapp:
    image: seppaleinen/worldinmovies_webapp
    build: frontend/app/
    depends_on:
      - backend
    ports:
      - "81:80"
    volumes:
      - gunicornsocket:/run/
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:81}
      - REACT_APP_SENTRY_URL=${SENTRY_URL_FRONTEND}
    healthcheck:
      test: ['CMD', 'nc', '-vz', '-w1', 'localhost', '80']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
  gunicornsocket:
