# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: app/proto/movies.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import AsyncGenerator, List

import betterproto
import grpclib


@dataclass
class Movie(betterproto.Message):
    adult: bool = betterproto.bool_field(1)
    backdrop_path: str = betterproto.string_field(2)
    belongs_to_collection: str = betterproto.string_field(3)
    budget: int = betterproto.uint32_field(4)
    genres: List["MovieGenres"] = betterproto.message_field(5)
    homepage: str = betterproto.string_field(6)
    id: int = betterproto.uint32_field(7)
    imdb_id: str = betterproto.string_field(8)
    original_language: str = betterproto.string_field(9)
    original_title: str = betterproto.string_field(10)
    overview: str = betterproto.string_field(11)
    popularity: float = betterproto.double_field(12)
    poster_path: str = betterproto.string_field(13)
    production_companies: List["MovieProductionCompanies"] = betterproto.message_field(
        14
    )
    production_countries: List["MovieProductionCountries"] = betterproto.message_field(
        15
    )
    release_date: str = betterproto.string_field(16)
    revenue: int = betterproto.uint32_field(17)
    runtime: int = betterproto.uint32_field(18)
    spoken_languages: List["MovieSpokenLanguages"] = betterproto.message_field(19)
    status: str = betterproto.string_field(20)
    tagline: str = betterproto.string_field(21)
    title: str = betterproto.string_field(22)
    video: bool = betterproto.bool_field(23)
    vote_average: float = betterproto.double_field(24)
    vote_count: int = betterproto.uint32_field(25)
    alternative_titles: "MovieAlternativeTitles" = betterproto.message_field(26)
    credits: "MovieCredits" = betterproto.message_field(27)
    external_ids: "MovieExternalIds" = betterproto.message_field(28)
    images: "MovieImages" = betterproto.message_field(29)


@dataclass
class MovieGenres(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class MovieProductionCompanies(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    logo_path: str = betterproto.string_field(2)
    name: str = betterproto.string_field(3)
    origin_country: str = betterproto.string_field(4)


@dataclass
class MovieProductionCountries(betterproto.Message):
    iso_3166_1: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class MovieSpokenLanguages(betterproto.Message):
    english_name: str = betterproto.string_field(1)
    iso_639_1: str = betterproto.string_field(2)
    name: str = betterproto.string_field(3)


@dataclass
class MovieAlternativeTitles(betterproto.Message):
    titles: List[str] = betterproto.string_field(1)


@dataclass
class MovieCast(betterproto.Message):
    adult: bool = betterproto.bool_field(1)
    gender: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)
    known_for_department: str = betterproto.string_field(4)
    name: str = betterproto.string_field(5)
    original_name: str = betterproto.string_field(6)
    popularity: float = betterproto.double_field(7)
    profile_path: str = betterproto.string_field(8)
    cast_id: int = betterproto.uint32_field(9)
    character: str = betterproto.string_field(10)
    credit_id: str = betterproto.string_field(11)
    order: int = betterproto.uint32_field(12)


@dataclass
class MovieCrew(betterproto.Message):
    adult: bool = betterproto.bool_field(1)
    gender: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)
    known_for_department: str = betterproto.string_field(4)
    name: str = betterproto.string_field(5)
    original_name: str = betterproto.string_field(6)
    popularity: float = betterproto.double_field(7)
    profile_path: str = betterproto.string_field(8)
    credit_id: str = betterproto.string_field(9)
    department: str = betterproto.string_field(10)
    job: str = betterproto.string_field(11)


@dataclass
class MovieCredits(betterproto.Message):
    cast: List["MovieCast"] = betterproto.message_field(1)
    crew: List["MovieCrew"] = betterproto.message_field(2)


@dataclass
class MovieExternalIds(betterproto.Message):
    imdb_id: str = betterproto.string_field(1)
    wikidata_id: str = betterproto.string_field(2)
    facebook_id: str = betterproto.string_field(3)
    instagram_id: str = betterproto.string_field(4)
    twitter_id: str = betterproto.string_field(5)


@dataclass
class MovieImages(betterproto.Message):
    backdrops: List[str] = betterproto.string_field(1)
    logos: List[str] = betterproto.string_field(2)
    posters: List[str] = betterproto.string_field(3)


@dataclass
class GetMoviesRequest(betterproto.Message):
    movie_ids: List[int] = betterproto.int32_field(1)


class MoviesControllerStub(betterproto.ServiceStub):
    async def get_movies(
        self, *, movie_ids: List[int] = []
    ) -> AsyncGenerator[Movie, None]:
        request = GetMoviesRequest()
        request.movie_ids = movie_ids

        async for response in self._unary_stream(
            "/movies.MoviesController/GetMovies",
            request,
            Movie,
        ):
            yield response
